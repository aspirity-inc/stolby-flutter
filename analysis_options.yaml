include: package:flutter_lints/flutter.yaml

analyzer:
  plugins:
    - dart_code_metrics
  exclude:
    - "**/*.g.dart" # All generated files
    - "**/*.config.dart" # Config generated files
    - "**/*.mocks.dart" # Generated mocks
    - "**/*.chopper.dart" # Generated files
    - "**/*.gr.dart" # Generated routes
    - "**/*.freezed.dart" # Generated files
  language:
    strict-casts: true # Ensures that the type inference engine never implicitly casts from dynamic to a more specific type
    strict-inference: true # Ensures that the type inference engine never chooses the dynamic type when it can’t determine a static type
    strict-raw-types: true # Ensures that the type inference engine never chooses the dynamic type when it can’t determine a static type due to omitted type arguments
  errors:
    always_use_package_imports: error
    avoid_dynamic_calls: error
    avoid_empty_else: error
    avoid_print: error
    avoid_relative_lib_imports: error
    avoid_returning_null_for_future: error
    avoid_slow_async_io: error
    avoid_type_to_string: error
    avoid_types_as_parameter_names: error
    avoid_web_libraries_in_flutter: error
    cancel_subscriptions: error
    close_sinks: error
    comment_references: error
    control_flow_in_finally: error
    empty_statements: error
    hash_and_equals: error
    invariant_booleans: error
    iterable_contains_unrelated_type: error
    list_remove_unrelated_type: error
    literal_only_boolean_expressions: error
    no_duplicate_case_values: error
    no_logic_in_create_state: error
    prefer_void_to_null: error
    test_types_in_equals: error
    throw_in_finally: error
    unnecessary_statements: error
    unrelated_type_equality_checks: error
    use_key_in_widget_constructors: error
    valid_regexps: error

dart_code_metrics:
  metrics-exclude:
    - test/**
  rules-exclude:
    - test/**
  metrics:
    cyclomatic-complexity: 20
    maintainability-index: 50
    maximum-nesting-level: 4
    number-of-parameters: 4
    source-lines-of-code: 50
  rules:
    - avoid-collection-methods-with-unrelated-types
    - avoid-dynamic
    - avoid-global-state
    - avoid-throw-in-catch-block
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters
    - binary-expression-operand-order
    - double-literal-format
    - format-comment
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - no-equal-then-else
    - no-object-declaration
    - prefer-async-await
    - prefer-conditional-expressions
    - prefer-first
    - prefer-last
    - prefer-trailing-comma
    - always-remove-listener
    - avoid-border-all
    - avoid-returning-widgets
    - avoid-unnecessary-setstate
    - avoid-wrapping-in-padding
    - prefer-const-border-radius
    - prefer-single-widget-per-file
    - prefer-extracting-callbacks
    - avoid-nested-conditional-expressions:
        acceptable-level: 2
    - prefer-correct-identifier-length:
        exceptions: [ 'i', 'j', 'x', 'y', 'id', 'db' ]
        max-identifier-length: 35
        min-identifier-length: 3
    - prefer-correct-type-name:
        min-length: 3
        max-length: 40
    - member-ordering-extended:
        alphabetize: false
        order:
          - const-fields
          - public-fields
          - private-fields
          - static-methods
          - named-constructors
          - factory-constructors
          - getters-setters
          - overridden-methods
          - public-methods
          - private-methods



linter:
  rules:
    # Error rules
    always_use_package_imports: true
    avoid_dynamic_calls: true
    avoid_empty_else: true
    avoid_print: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_future: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    avoid_web_libraries_in_flutter: true
    cancel_subscriptions: true
    close_sinks: true
    comment_references: true
    control_flow_in_finally: true
    empty_statements: true
    hash_and_equals: true
    invariant_booleans: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    literal_only_boolean_expressions: true
    no_duplicate_case_values: true
    no_logic_in_create_state: true
    prefer_void_to_null: true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_statements: true
    unrelated_type_equality_checks: true
    use_key_in_widget_constructors: true
    valid_regexps: true

    # Style rules
    always_declare_return_types: true
    always_put_control_body_on_new_line: true
    always_put_required_named_parameters_first: true
    always_require_non_null_named_parameters: true
    annotate_overrides: true
    avoid_annotating_with_dynamic: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_catching_errors: true
    avoid_classes_with_only_static_members: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_final_parameters: true
    avoid_function_literals_in_foreach_calls: false
    avoid_init_to_null: true
    avoid_multiple_declarations_per_line: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: true
    avoid_private_typedef_functions: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null: true
    avoid_returning_null_for_void: true
    avoid_returning_this: true
    avoid_setters_without_getters: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_types_on_closure_parameters: true
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    await_only_futures: true
    camel_case_extensions: true
    camel_case_types: true
    cascade_invocations: true
    cast_nullable_to_non_nullable: true
    conditional_uri_does_not_exist: true
    constant_identifier_names: true
    curly_braces_in_flow_control_structures: true
    deprecated_consistency: true
    directives_ordering: true
    empty_catches: true
    empty_constructor_bodies: true
    eol_at_end_of_file: true
    exhaustive_cases: true
    file_names: true
    flutter_style_todos: true
    implementation_imports: true
    join_return_with_assignment: true
    leading_newlines_in_multiline_strings: true
    library_prefixes: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    no_runtimeType_toString: true
    non_constant_identifier_names: true
    null_check_on_nullable_type_parameter: true
    null_closures: true
    omit_local_variable_types: true
    one_member_abstracts: true
    only_throw_errors: true
    overridden_fields: true
    package_prefixed_library_names: true
    parameter_assignments: true
    prefer_adjacent_string_concatenation: true
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_constructors_over_static_methods: true
    prefer_contains: true
    prefer_equal_for_default_values: true
    prefer_expression_function_bodies: true
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_foreach: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_int_literals: true
    prefer_interpolation_to_compose_strings: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    prefer_null_aware_method_calls: true
    prefer_null_aware_operators: true
    prefer_single_quotes: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    provide_deprecation_message: true
    recursive_getters: true
    require_trailing_commas: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    slash_for_doc_comments: true
    sort_child_properties_last: true
    sort_constructors_first: false
    sort_unnamed_constructors_first: false
    super_goes_last: true
    type_annotate_public_apis: true
    type_init_formals: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_constructor_name: true
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_late: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_checks: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_string_interpolations: true
    unnecessary_string_escapes: true
    unnecessary_this: true
    use_colored_box: true
    use_decorated_box: true
    use_full_hex_values_for_flutter_colors: true
    use_function_type_syntax_for_parameters: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_named_constants: true
    use_rethrow_when_possible: true
    use_setters_to_change_properties: true
    use_string_buffers: true
    use_test_throws_matchers: true
    use_to_and_as_if_applicable: true
    void_checks: true

    # Pub rules
    package_names: true
    secure_pubspec_urls: true
    sort_pub_dependencies: false