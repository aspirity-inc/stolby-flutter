// Mocks generated by Mockito 5.0.16 from annotations
// in stolby_flutter/test/application/settings/settings_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:stolby_flutter/domain/feature/settings/entities/app_settings_entity.dart'
    as _i2;
import 'package:stolby_flutter/domain/feature/settings/i_settings_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAppSettingsEntity_0 extends _i1.Fake
    implements _i2.AppSettingsEntity {}

/// A class which mocks [ISettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockISettingsRepository extends _i1.Mock
    implements _i3.ISettingsRepository {
  MockISettingsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AppSettingsEntity> fetchSettings() => (super.noSuchMethod(
          Invocation.method(#fetchSettings, []),
          returnValue:
              Future<_i2.AppSettingsEntity>.value(_FakeAppSettingsEntity_0()))
      as _i4.Future<_i2.AppSettingsEntity>);
  @override
  _i4.Future<void> toggleAutoTheme(bool? value) =>
      (super.noSuchMethod(Invocation.method(#toggleAutoTheme, [value]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> toggleDarkTheme(bool? value) =>
      (super.noSuchMethod(Invocation.method(#toggleDarkTheme, [value]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> toggleMapReverse(bool? value) =>
      (super.noSuchMethod(Invocation.method(#toggleMapReverse, [value]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> toggleUserCentering(bool? value) =>
      (super.noSuchMethod(Invocation.method(#toggleUserCentering, [value]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> toggleGeolocation(bool? value) =>
      (super.noSuchMethod(Invocation.method(#toggleGeolocation, [value]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> onBoardingVisited() =>
      (super.noSuchMethod(Invocation.method(#onBoardingVisited, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
